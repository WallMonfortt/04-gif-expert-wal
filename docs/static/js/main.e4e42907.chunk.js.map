{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","img/WM2.png","img/WMonf.png","components/MainHeader.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategory","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","placeholder","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","original","GifGridItem","props","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","MainHeader","height","WM2","WMonf","GifExpertApp","ReactDOM","render","document","getElementById"],"mappings":"wNAGaA,EAAc,SAAC,GAAsB,IAAnBC,EAAkB,EAAlBA,YAAkB,EACXC,mBAAS,IADE,mBACxCC,EADwC,KAC5BC,EAD4B,KAgB/C,OACE,uBAAMC,SAVa,SAACC,GACpBA,EAAEC,iBACGJ,EAAWK,OAAOC,OAAS,IAC9BR,GAAY,SAAAS,GAAI,OAAMP,GAAN,mBAAqBO,OACrCN,EAAc,MAMhB,UACE,uBACEO,KAAK,OACLC,YAAY,iBACZC,MAAQV,EACRW,SAnBoB,SAACR,GACzBF,EAAcE,EAAES,OAAOF,UAoBrB,wBAAQF,KAAK,SAAb,wB,+BC3BOK,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACfC,EADe,iDACkCC,UAAWH,GAD7C,+DAEFI,MAAOF,GAFL,cAEfG,EAFe,gBAGAA,EAAKC,OAHL,uBAGdC,EAHc,EAGdA,KAEDC,EAAOD,EAAKE,KAAI,SAAAC,GACpB,MAAO,CACLC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAKQ,EAAIG,OAAOC,SAASZ,QATR,kBAadM,GAbc,4CAAH,sDCEPO,EAAc,SAAEC,GAE3B,OACE,sBAAKC,UAAU,yCAAf,UACE,qBAAKC,IAAKF,EAAMd,IAAKiB,IAAKH,EAAMJ,QAChC,4BAAII,EAAMJ,YCHHQ,EAAU,SAAC,GAAkB,IAAhBpB,EAAe,EAAfA,SAAe,ECDb,SAAEA,GAAe,IAAD,EAChBf,mBAAS,CACjCsB,KAAM,GACNc,SAAS,IAH+B,mBACnCC,EADmC,KAC5BC,EAD4B,KAmB1C,OAZAC,qBAAU,WAERzB,EAASC,GACRyB,MAAM,SAAAC,GACLH,EAAS,CACPhB,KAAKmB,EACLL,SAAS,SAIZ,CAACrB,IAEGsB,EDf2BK,CAAc3B,GAAlCa,EAHyB,EAG/BN,KAAcc,EAHiB,EAGjBA,QAItB,OACE,qCACE,oBAAIJ,UAAU,oCAAd,SAAoDjB,IAElDqB,GAAW,mBAAGJ,UAAU,mCAAb,qBAEb,qBAAKA,UAAU,YAAf,SACGJ,EAAOJ,KAAK,SAAAC,GAAG,OACd,cAAC,EAAD,eAEKA,GADCA,EAAIC,aEpBL,G,MAAA,IAA0B,iCCA1B,MAA0B,kCCmB1BiB,EAdI,WACjB,OACE,8BACE,sBAAKX,UAAU,cAAf,UACC,sBAAKA,UAAU,QAAf,UACG,qBAAKY,OAAO,OAAOV,IAAI,OAAQD,IAAKY,IACpC,8BAAM,qBAAKD,OAAO,OAAOV,IAAI,OAAQD,IAAKa,SAE5C,oBAAId,UAAU,SAAd,6BCkBOe,EAvBM,WAAO,IAAD,EACO/C,mBAAS,CAAC,cADjB,mBAClBe,EADkB,KACRhB,EADQ,KAGzB,OACE,gCACE,cAAC,EAAD,IACA,cAAC,EAAD,CAAaA,YAAgBA,IAC7B,uBAEA,6BAEIgB,EAASS,KAAK,SAAAT,GAAQ,OACpB,cAAC,EAAD,CAEEA,SAAUA,GADLA,Y,MCfnBiC,IAASC,OAEL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.e4e42907.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ( { setCategory }) => {\r\n  const [inputValue, setInputValue] = useState(\"\");\r\n\r\n  const handleInputChange = (e) => {\r\n    setInputValue(e.target.value);\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if ( inputValue.trim().length > 2) {\r\n      setCategory(cats => [ inputValue, ...cats]);\r\n      setInputValue('')\r\n    }\r\n    \r\n  }\r\n\r\n  return (\r\n    <form onSubmit={ handleSubmit }>\r\n      <input \r\n        type=\"text\"\r\n        placeholder=\"Search gifs...\"\r\n        value={ inputValue }\r\n        onChange={ handleInputChange }\r\n      />\r\n      <button type=\"submit\" >Submit</button>\r\n    </form>\r\n  )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n  setCategory: PropTypes.func.isRequired\r\n}\r\n","export const getGifs = async( category ) =>{\r\n  const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI( category ) }&limit=15&api_key=Jn6IQ2SbO04PFQUMxezUP0PISEfyuoSG`;\r\n  const resp = await fetch( url );\r\n  const {data} = await resp.json();\r\n\r\n  const gifs = data.map(img => {\r\n    return {\r\n      id: img.id,\r\n      title: img.title,\r\n      url: img.images.original.url\r\n    }\r\n  })\r\n\r\n  return gifs;\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ( props ) => {\r\n\r\n  return (\r\n    <div className=\"card animate__animated animate__fadeIn\">\r\n      <img src={props.url} alt={props.title} />\r\n      <p>{props.title}</p>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ( {category} ) => {\r\n\r\n\r\n  const { data: images, loading } = useFetchGifs( category );\r\n\r\n  \r\n\r\n  return (\r\n    <>\r\n      <h3 className=\"animate__animated animate__fadeIn\" >{category}</h3>\r\n      {\r\n        loading && <p className=\"animate__animated animate__flash\" >Loading</p>\r\n      }\r\n      <div className=\"card-grid\">\r\n        {images.map( img =>(\r\n          <GifGridItem \r\n          key={ img.id }\r\n          { ...img } \r\n          />\r\n        ))\r\n        }\r\n      </div>\r\n    </>\r\n      \r\n  )\r\n}\r\n","import { useEffect, useState } from \"react\"\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n  const [state, setstate] = useState({\r\n    data: [],\r\n    loading: true,\r\n\r\n  });\r\n\r\n  useEffect(() => {\r\n    \r\n    getGifs( category )\r\n    .then( imgs => {\r\n      setstate({\r\n        data:imgs,\r\n        loading: false\r\n      });\r\n    })\r\n    \r\n  }, [category])\r\n\r\n  return state;\r\n}","export default __webpack_public_path__ + \"static/media/WM2.d9f62e77.png\";","export default __webpack_public_path__ + \"static/media/WMonf.abd7b505.png\";","import React from 'react'\r\nimport '../styles/Main-Header.css'\r\nimport WM2 from '../img/WM2.png'\r\nimport WMonf from '../img/WMonf.png'\r\n\r\nconst MainHeader = () => {\r\n  return (\r\n    <div>\r\n      <div className=\"Main-Header\">\r\n       <div className=\"logos\">\r\n          <img height=\"60px\" alt=\"logo\"  src={WM2} />\r\n          <div ><img height=\"60px\" alt=\"logo\"  src={WMonf} /></div>\r\n        </div>\r\n        <h1 className=\"tittle\">Gif - App</h1>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default MainHeader\r\n","import React from 'react'\r\nimport { useState } from \"react\";\r\nimport { AddCategory } from './components/AddCategory';\r\nimport {GifGrid} from './components/GifGrid'\r\nimport MainHeader from './components/MainHeader';\r\n\r\n\r\n\r\nconst GifExpertApp = () => {\r\n  const [category, setCategory] = useState(['One punch'])\r\n  \r\n  return (\r\n    <div>\r\n      <MainHeader />\r\n      <AddCategory setCategory = { setCategory } />\r\n      <hr />\r\n\r\n      <ol>\r\n        {\r\n          category.map( category  => \r\n            <GifGrid\r\n              key={category}\r\n              category={category}\r\n            /> \r\n          )\r\n        }\r\n      </ol>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default GifExpertApp\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp'\nimport './index.css';\n\n\nReactDOM.render(\n  \n    <GifExpertApp /> ,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}